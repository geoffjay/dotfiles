# vim:filetype=sh

# debug=0, info=1, warn=2, error=3
LOG_LEVEL_DEBUG=0
LOG_LEVEL_INFO=1
LOG_LEVEL_WARN=2
LOG_LEVEL_ERROR=3
LOG_LEVEL=$LOG_LEVEL_WARN
#RED='\033[0;31m'
#GREEN='\033[0;32m'
#BLUE='\033[0;34m'
#YELLOW='\033[1;33m'
#NC='\033[0m'
RED='\e[38;5;82m'
GREEN='\e[38;5;32m'
BLUE='\e[38;5;34m'
YELLOW='\e[38;5;33m'
NC='\e[0m'

# This doesn't do anything yet other than change the colour
# XXX: see log4bash for replacement(?)
function __log {
    if (( $1 == $LOG_LEVEL_DEBUG && $LOG_LEVEL == $LOG_LEVEL_DEBUG )); then
        printf "${BLUE}[DEBUG]${NC} ${2}\n"
    elif (( $1 == $LOG_LEVEL_INFO && $LOG_LEVEL <= $LOG_LEVEL_INFO )); then
        printf "${GREEN}[ INFO]${NC} ${2}\n"
    elif (( $1 == $LOG_LEVEL_WARN && $LOG_LEVEL <= $LOG_LEVEL_WARN )); then
        printf "${YELLOW}[ WARN]${NC} ${2}\n"
    elif (( $1 == $LOG_LEVEL_ERROR )); then
        printf "${RED}[ERROR]${NC} ${2}\n"
    fi
}

function __set_log_level {
    LOG_LEVEL=$1
    if (( $LOG_LEVEL < $LOG_LEVEL_DEBUG )); then
        LOG_LEVEL=$LOG_LEVEL_DEBUG
    elif (( $LOG_LEVEL > $LOG_LEVEL_ERROR )); then
        export LOG_LEVEL=$LOG_LEVEL_ERROR
    fi
    export LOG_LEVEL
}

function debug {
    __log $LOG_LEVEL_DEBUG "${1}"
}

function info {
    __log $LOG_LEVEL_INFO "${1}"
}

function warn {
    __log $LOG_LEVEL_WARN "${1}"
}

function error {
    __log $LOG_LEVEL_ERROR "${1}"
}

alias set-log-level=__set_log_level $1
